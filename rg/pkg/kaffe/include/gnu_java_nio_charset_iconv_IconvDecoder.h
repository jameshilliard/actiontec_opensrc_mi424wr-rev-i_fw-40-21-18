/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

#ifndef _Included_gnu_java_nio_charset_iconv_IconvDecoder
#define _Included_gnu_java_nio_charset_iconv_IconvDecoder

#ifdef __cplusplus
extern "C" {
#endif

#undef gnu_java_nio_charset_iconv_IconvDecoder_STATE_RESET
#define gnu_java_nio_charset_iconv_IconvDecoder_STATE_RESET 0L
#undef gnu_java_nio_charset_iconv_IconvDecoder_STATE_CODING
#define gnu_java_nio_charset_iconv_IconvDecoder_STATE_CODING 1L
#undef gnu_java_nio_charset_iconv_IconvDecoder_STATE_END
#define gnu_java_nio_charset_iconv_IconvDecoder_STATE_END 2L
#undef gnu_java_nio_charset_iconv_IconvDecoder_STATE_FLUSHED
#define gnu_java_nio_charset_iconv_IconvDecoder_STATE_FLUSHED 3L
#undef gnu_java_nio_charset_iconv_IconvDecoder_DEFAULT_REPLACEMENT
#define gnu_java_nio_charset_iconv_IconvDecoder_DEFAULT_REPLACEMENT "ï¿½"
JNIEXPORT void JNICALL Java_gnu_java_nio_charset_iconv_IconvDecoder_openIconv(JNIEnv*, jobject, jstring);
JNIEXPORT jint JNICALL Java_gnu_java_nio_charset_iconv_IconvDecoder_decode(JNIEnv*, jobject, jbyteArray, jcharArray, jint, jint, jint, jint);
JNIEXPORT void JNICALL Java_gnu_java_nio_charset_iconv_IconvDecoder_closeIconv(JNIEnv*, jobject);

#ifdef __cplusplus
}
#endif

#endif
