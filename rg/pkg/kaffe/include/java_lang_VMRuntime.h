/* DO NOT EDIT THIS FILE - it is machine generated */
#include <native.h>

#ifndef _Included_java_lang_VMRuntime
#define _Included_java_lang_VMRuntime

#ifdef __cplusplus
extern "C" {
#endif

/* Header for class java_lang_VMRuntime */

typedef struct Hjava_lang_VMRuntime {
  /* Fields from java/lang/Object: */
  Hjava_lang_Object base;

  /* Fields from java/lang/VMRuntime: */
} Hjava_lang_VMRuntime;

extern jint java_lang_VMRuntime_availableProcessors(void);
extern jlong java_lang_VMRuntime_freeMemory(void);
extern jlong java_lang_VMRuntime_totalMemory(void);
extern jlong java_lang_VMRuntime_maxMemory(void);
extern void java_lang_VMRuntime_gc(void);
extern void java_lang_VMRuntime_runFinalization(void);
extern void java_lang_VMRuntime_runFinalizationForExit(void);
extern void java_lang_VMRuntime_traceInstructions(jboolean);
extern void java_lang_VMRuntime_traceMethodCalls(jboolean);
extern void java_lang_VMRuntime_runFinalizersOnExit(jboolean);
extern void java_lang_VMRuntime_exit(jint);
extern jint java_lang_VMRuntime_nativeLoad(struct Hjava_lang_String*, struct Hjava_lang_ClassLoader*);
extern struct Hjava_lang_String* java_lang_VMRuntime_getLibPrefix(void);
extern struct Hjava_lang_String* java_lang_VMRuntime_getLibSuffix(void);

#ifdef __cplusplus
}
#endif

#endif
