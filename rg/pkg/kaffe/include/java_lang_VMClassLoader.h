/* DO NOT EDIT THIS FILE - it is machine generated */
#include <native.h>

#ifndef _Included_java_lang_VMClassLoader
#define _Included_java_lang_VMClassLoader

#ifdef __cplusplus
extern "C" {
#endif

/* Header for class java_lang_VMClassLoader */

typedef struct Hjava_lang_VMClassLoader {
  /* Fields from java/lang/Object: */
  Hjava_lang_Object base;

  /* Fields from java/lang/VMClassLoader: */
#undef java_lang_VMClassLoader_USE_VM_CACHE
#define java_lang_VMClassLoader_USE_VM_CACHE 0L
} Hjava_lang_VMClassLoader;

extern struct Hjava_lang_Class* java_lang_VMClassLoader_defineClass(struct Hjava_lang_ClassLoader*, struct Hjava_lang_String*, HArrayOfByte*, jint, jint, struct Hjava_security_ProtectionDomain*);
extern void java_lang_VMClassLoader_resolveClass(struct Hjava_lang_Class*);
extern struct Hjava_lang_Class* java_lang_VMClassLoader_loadClass(struct Hjava_lang_String*, jboolean);
extern struct Hjava_lang_Class* java_lang_VMClassLoader_getPrimitiveClass0(jchar);

#ifdef __cplusplus
}
#endif

#endif
