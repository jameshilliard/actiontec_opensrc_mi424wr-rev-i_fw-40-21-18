Newsgroups: comp.unix.admin,comp.unix.misc,alt.os.linux,alt.sys.sun,bln.comp.sun,bln.comp.unix,comp.os.linux.development.apps,comp.os.linux.misc,comp.sys.hp.apps,comp.sys.hp.misc,comp.sys.sgi.admin,comp.sys.sgi.apps,comp.sys.sgi.misc,comp.sys.sun.admin,comp.sys.sun.apps,comp.sys.sun.misc,comp.unix.aix,comp.unix.bsd.freebsd.misc,comp.unix.bsd.netbsd.misc,comp.unix.solaris,de.comp.os.linux.misc,de.comp.os.unix,linux.dev.admin,linux.dev.apps,maus.os.linux,maus.os.linux68k,maus.os.unix,uk.comp.os.linux
Subject: Star-1.3 source has been released

Star is the fastest tar archiver for UNIX

Star has many improvements compared to other tar 
imlementations (including gnu tar). See below for a short description
of the highlight of star.

Star is located on:

ftp://ftp.fokus.gmd.de/pub/unix/star

Changes since star-1.2:

-	star -c now don't uses STDIO
	This speeds things up (15% on Solaris 50% on Linux due to the bad 
	STDIO implementation on Linux)

	Star now usually needs significant less user CPU time than GNU tar.

	On Intel processors star uses about the same CPU time than GNU tar.
	This is because star uses structured code which is punished by the
	Intel Processor implementation.

	Star is now at least 30% faster than ufsdump

-	Experimental -Hxustar option to create xstar archives without the
	extra 'tar' signature at the end of the tar header.
	This makes the xstar format 100% POSIX compliant too.

-	Compat code for old tar option behaviour.
	Allows all but to use "tar -cf file" on an existent file. 
	tar -cf file remains valid if "file" does not exist or is empty. 
	This keeps the star behaviour not to clobber files on miss typed
	command lines and gives old tar compatibility.

-	star now realises if the tar archive is too small and not a multiple
	of 512 bytes.

-	Converted to the new makefile system that uses autoconf.

-	-u/-r options enabled

-	-diff now checks for sparse files too.
	Note that this will give probems if the file is located on a buggy
	HP-UX NFS file server.

-	-F option new to exclude *.o SCCS/* and similar

-	-w optionm as alias for -I
	-I will go away with old behavior in star-1.4

-	Exit code now reflects the status of the exeution

-	New error statistic prints counts for several common error situations.

-	Print a warning if found more than 12 Bits in mode Feld
	This helps to find non POSIX compliant Sun tar & GNU tar archives


-	Added code to use the _FIOAI ioctl on Solaris to speed up
		archiving sparse files > 200 times. You need a hacked
		ufs filesystem in order to use this on Solaris 2.6
		ftp://ftp.fokus.gmd.de/pub/unix/kernel/ufs

-	Workaround for a bug in Sun's tar on Solaris that creates
	illegal null terminated filenames (if the filename is 
	exactly 100 chars long).

-	Fixed a problem with autoconf & SCO for major()...

-	Check VOLHDR on extract

-	New option -bz to call bzip2 as compress program.

-	added O_BINARY to allow star to work corectly on Cygwin32

-	Avoid seekdir() in Cygwin32 

-	New option -refresh-old-files to prevent star from creating
	new files while extracting an archive.

-	Don't strip leading '/' from targets of symlinks

-	Star now knows that that DOS filesystems increment the time
	stamp of a file only in 2 second steps.
	This is needed to make the skipping of older files on extraction
	work correctly.

-	Correctly skip a file on tape if the filename is longer than the
	OS can handle.

-	Always make the path tables at least 1024 bytes even when the actual OS
	does not allow that much. This helps to read archives from other OS.

-	Workaround for the Cygwin bug that causes maxfilename to be longer
	than maxpathname.

-	Workaround for Cygwin bug that return ENOTEMPTY for
	rmdir() if the arg does not refer to a directory.
	***********
	We need to check this if Cygwin-1.x hast been corrected
	***********

-	Workaround for the fact that Cygwin32 does not allow us to set the
	file access times for read only files.

-	Print warning for unknown archive types.

-	Knowledge base for

		Packed, Gzip compressed, LZW compressed, Freezed,
		SCO LZH compressed and bzip2

	compressed magic numbers gives hints for correct usage of -z or -bz
	options. Tell user about the compression program that will
	help to unpack the archive.

-	Star offeres full FIFO and remote tape access support even
	on Cygwin32.

-	Better portability support

-	Support for various new OS platforms (e.g. QNX)

-	New option -refresh as alias to -refresh-old-files

-	New option -hpdev allows 24 bits in dev_minor using 8 octal
	digits. Note that although it allows to ctreate tar archives
	that can be read with HP-UX tar, this creates tar archives
	which violate POSIX.

-	New option -modebits allows to create tar archives that include
	more than 12 bits from st_mode. Note this create tar archives
	that violate POSIX but some tar implementations insist in reading
	such nonstandard archives....

-	New option -copylinks allows to copy hard/symlinks targets 
	rather than creating a link. This helps to extract tar files
	on systems that do not implement links (e.g. OS/2).

-	Print a message for EFBIG on the archive

-	Suppress the sync pipe read error messages when another
	error message is already printed and the sync pipe read error
	is only a result of this other error.

-	set the time of a file to 0 (1. Jan 1970) if an error occurs.
	This allows to use another runf of star to overwrite this file
	whithout having to specify the -U flag.

-	Use fsync() to force file consistence on NFS filesystems.

-	Allow 7 octal numbers in 8 Byte fields in POSIX mode.
	This gives 21 bits in minor device numbers.

-	New base 256 coding allows 63 bits in minor device numbers.
	This coding has been negotiated with the new gnutar 
	maintainer.
	Warning, this is not yet 100% stable code but it allows
	to archive device files on FreeBSD.

-	Use mkfifo() if present

-	Add remove_file support to more than plain files only.

-	Added FIFO suport for OS/2

-	Better portability support

-	Automated de-configuration of the FIFO on platforms
	that do not support shared memory

-	Fix for a buffer overflow problem with remote tape access.

-	Remote tape client in star now supports the GNU extension
	for the open command that transmitts abstract open(2) flags.

-	Now includes a /etc/rmt remote tape server.
	This is the first open source remote tape server that
	is as portable and interoperable as possible.
	Support for Sun and GNU extensions.

-	New mt program

-	rmt Program now supports additional security features
	that are driven by entries in /etc/default/rmt

-	Man page created for rmt.

-	align_test.c removed from lib/

-	avoffset.c removed from lib/

-	several functions now use js_snprintf() instead of
	sprintf()

-	star now supports to open remote files with O_CREATE
	if the remote tape sever (/etc/rmt) is the Schily rmt
	sever or the GNU rmt server

-	Format strings of printf-like functions checked and corrected.

-	FIFO now should work on OS/2 too

-	Fixed a autoconf typo in star_unix.c that 
	disabled _FIOSATIME and thus star -c -atime ...
	did modify ctime when trying to reset atime after
	reading a file.

-	Fixed a typo in mt.c (active if no default tape definition exists)

-	Allow mt.c to compile on systems that have no sys/mtio.h
	e.g. SCO

-	mt.c will now compile on HP-UX

-	support for win98-2 & win2000 & Win ME

-	star list= ... will now skip empty lines (llen == 0)

-	Support for dev_t > 32 bits (e.g. Solaris in 64 bit mode)

-	Support for Apollo Domain/OS (e.g. mmap() specials)

-	Support for MacOS X (Darwin)

-	Support for GCC on IRIX

-	New option -onull as alias for -nullout to make star behave similar to sdd

-	Made all options that include a '_' obolete and replaced
	'_' by '-' in the option names.

-	Long Listing now prints a 'l' for files with mandatory record locking

-	Long listing for major/minor now unsigned

-	timedefs.h typo fixed (caused time.h & sys/time.h never be both included)


Revision history (short)

1982	First version on UNOS (extract only)
1985	Port to UNIX (fully funtional version)
1985	Added pre Posix method of handling special files/devices
1986	First experiments with fifo as external process.
1993	Remote tape access
1993	diff option
1994	Fifo with shared memory integrated into star
1994	Very long filenames and sparse files
1994	Gnutar and Ustar(Posix) handling added
1994	Xstar format (extended Posix) defined and introduced
1995	Ported to many platforms

Supported platforms:

SunOS 4.x, Solaris (SunOS 5.x), Linux,
HP-UX, DG/UX, IRIX, AIX, FreeBSD, NetBSD, OpenBSD,
OSF-1, True-64, BeOS, Apollo Domain/OS, Next-STep, 
OS/2, SCO-openserver, SCO-unixware, Cygwin (Win32),
Sony NewsOS,  BSDi (BSD/OS), QNX, Apple Rhapsody,
MacOS X

Joerg

-------------------------------------------------------------
Star is the fastest known implementation of a tar archiver.
Star is able to make backups with more than 12MB/s if the
disk and tape drive support such a speed. This is more than
double the speed that ufsdump will get.
Ampex got 13.5 MB/s with their new DLT tape drive.
Ufsdump got a maximum speed of about 6MB/s with the same hardware.

Star development started 1982, development is still in progress.
The current version of star is stable and 
I never did my backups with other tools than star.

Its main advantages over other tar implementations are:

	fifo			- keeps the tape streaming.
				  This gives you faster backups than
				  you can achieve with ufsdump, if the
				  size of the filesystem is > 1 GByte.

	pattern matcher		- for a convenient user interface
				  (see manual page for more details).
				  To archive/extract a subset of files.

	sophisticated diff	- user tailorable interface for comparing
				  tar archives against file trees
				  This is one of the most interesting parts
				  of the star implementation.

	no namelen limitation	- Pathnames up to 1024 Bytes may be archived.
				  (The same limitation applies to linknames)
				  This limit may be expanded in future
				  without changing the method to record long names.

	deals with all 3 times	- stores/restores all 3 times of a file
				  (even creation time)
				  may reset access time after doing backup

	does not clobber files	- more recent copies on disk will not be 
				  clobbered from tape
				  This may be the main advantage over other
				  tar implementations. This allows
				  automatically repairing of corruptions
				  after a crash & fsck (Check for differences
				  after doing this with the diff option).

	automatic byte swap	- star automatically detects swapped archives
				  and transparently reads them the right way

	automatic format detect	- star automatically detects several common
				  archive formats and adopts to them.
				  Supported archive types are:
				  Old tar, gnu tar, ansi tar, star.

	fully ansi compatible	- Star is fully ANSI/Posix 1003.1 compatible.
				  See README.otherbugs for a complete description
				  of bugs found in other tar implementations.

Have a look at the manual page, it is included in the distribution.

Author:

Joerg Schilling
Seestr. 110
D-13353 Berlin
Germany

Email: 	joerg@schily.isdn.cs.tu-berlin.de, js@cs.tu-berlin.de
	schilling@fokus.gmd.de

Please mail bugs and suggestions to me.
