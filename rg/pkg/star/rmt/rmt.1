. \" @(#)rmt.1	1.2 01/07/05 Copyr 1994-2000 J. Schilling
. \"  Manual Seite fuer rmt
. \"
.if t .ds a \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'a
.if t .ds o \v'-0.55m'\h'0.00n'\z.\h'0.45n'\z.\v'0.55m'\h'-0.45n'o
.if t .ds u \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'u
.if t .ds A \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'A
.if t .ds O \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'O
.if t .ds U \v'-0.77m'\h'0.30n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.75n'U
.if t .ds s \\(*b
.if t .ds S SS
.if n .ds a ae
.if n .ds o oe
.if n .ds u ue
.if n .ds s sz
.TH RMT 1 "Release 1.1" "J\*org Schilling" "Schily\'s USER COMMANDS"
.SH NAME
rmt \- remote magnetic tape protocol server
.SH SYNOPSIS
.B /opt/schily/sbin/rmt
.br
.B /etc/rmt

.SH DESCRIPTION
.IX  "rmt command"  ""  "\fLrmt\fP \(em remote magnetic tape protocol server"
.IX  "remote magnetic tape protocol server"  ""  "remote magnetic tape protocol server \(em \fLrmt\fP"
This is the description of the enhanced 
.B "Schily SING"
version of the 
.B rmt
remote tape server program.
.B rmt
is a program used by programs like
.B star 
and
.B ufsdump 
hat like to access remote magnetic tape drives and files
through an interprocess communication connection.
.B rmt
is normally started up with an
.BR rexec (3)
or
.BR rcmd (3)
call.
.LP
The
.B rmt
program accepts 
.BR open ,
.BR close ,
.BR read ,
.B write 
and
.B seek
requests and requests that are specific to magnetic tapes.
.B rmt
performs the commands and then responds with a status indication.
.LP
This
.B "Schily SING"
version of the rmt server gives full compatibility to the
original BSD version, the enhanced Sun version and the 
enhanced GNU version. It supports best speed and
best compliance even when server and client code are running
on different platforms.
It is prepared to be installed as a user shell in the passwd
file to create remote tape specific logins and security checking.
To use the enhanced compatibility features, you need to either
use the remote tape client code from 
.B star
or reimplement it's features.
.LP
All responses are in
.SM ASCII
and in one of the following two forms.
.LP
Successful commands have responses of
.IP
.BI A number\en
.LP
where
.I number
is the
.SM ASCII
representation of a decimal number.
Unsuccessful commands are responded to with
.IP
.BI E error-number \en error-message \en
.LP
where
.I error-number
is one of the possible error
numbers described in
.BR intro (2),
and
.I error-message
is the corresponding error string as retrieved by
.BR strerror (3).
.LP
The protocol implements the
following commands:
.RS
.TP 15
.BI O device \en mode \en
.TP
.BI O device \en "mode symbolic_mode" \en
Open the specified
.I device
or file using the indicated
.IR mode .
.I device
is a full path name, and
.I mode
is an
.SM ASCII
representation of a decimal
number suitable for passing to
.BR open (2).
If both,
.I mode
and 
.I symbolic_mode
are used, they are separated by a space character;
.I symbolic_mode
appears on the same line as the numeric
is in the same notation as it would appear in a C source (e.g.
.BR O_RDWR|O_CREAT ).
If the
.I symbolic_mode
is send to the server, the numeric
.B mode
is ignored.
The symbolic notation allows to send the expected open mode over
the wire using a system independent method.
This is needed because different operating systems define all
bits execpt the lowest two bits in a different way.
If a device is already open, it is
closed before a new open is performed.
.sp
A VERSION 1 client that is aware of the official
.I mt_op
codes should issue a
.br
.BI I -1 \en 0\en
.br
command just after opening a file or device. This is needed to
tell the server that the client is aware of the official order
of the 
.I mt_op
codes in the range 0..7 and maps differing values to the official
ones.
.br
.ne 7
.TP
.BI C device \en
Close the currently open device or file.  The argument
.I device
is ignored.
.br
.ne 7
.TP
.BI R count \en
Read
.I count
bytes of data from the open device or file.
.B rmt
performs the requested
.BR read (2)
operation and responds with
.BI A count-read\en
if the read operation was
successful; otherwise an error in 
standard format is returned.  If the read operation
was successful, the data read is sent directly after
the response described above.
.br
.ne 7
.TP
.BI W count \en
Write data to the open device or file.
After reading the command specification,
.B rmt
reads
.I count
bytes from the network connection and aborts if a premature
.SM EOF
is encountered.
The return value from the
.BR write (2)
operation is returned as reply.
.br
.ne 7
.TP
.BI L whence \en offset \en
Perform an
.BR lseek (2)
operation on open the device or file using the specified parameters.
The return value from the
.BR lseek (2)
operation is returned as reply.
.br
.ne 7
.TP
.B S
The old non-portable status call.
If the open device is a magnetic tape, return the magnetic tape status,
as obtained with a
.SB MTIOCGET
.B ioctl
call.
If the open device is not a magnetic tape, an error is returned.
If the 
.SB MTIOCGET
operation was successful,
an \*(lqack\*(rq is sent with the size of the
status buffer, then the status buffer is sent.
As the status buffer is sent in binary, this
command it considered outdated. Please use the extended status command instead.
This command is not terminated with a new-line.
.br
.ne 7
.TP
.BI s sub-command
The new portable status call.
If the open device is a magnetic tape, return members of the
magnetic tape status structure, as obtained with a
.SB MTIOCGET
.B ioctl
call.
If the open device is not a magnetic tape, an error is returned.
If the 
.SB MTIOCGET
operation was successful, the numerical value of the structure member
is returned in decimal.
The following sub commands are supported:
.RS
.br
.ne 3
.TP
T
return the content of the structure member
.B mt_type
which contains the type of the magnetic tape device.
.br
.ne 3
.TP
D
return the content of the structure member
.B mt_dsreg
which contains the \*(lqdrive status register\*(rq.
.br
.ne 3
.TP
E
return the content of the structure member
.B mt_erreg
which contains the \*(lqerror register\*(rq.
This structure member must be retrieved first
because it is cleared after each
.SB MTIOCGET
.B ioctl
call.
.br
.ne 3
.TP
R
return the content of the structure member
.B mt_resid
which contains the residual count of the last I/O.
.br
.ne 3
.TP
F
return the content of the structure member
.B mt_fileno
which contains the block number of the current tape position.
.br
.ne 3
.TP
B
return the content of the structure member
.B mt_blkno
which contains the block number of the current tape position.
.br
.ne 3
.TP
f
return the content of the structure member
.B mt_flags
which contains MTF_ flags from the driver.
.br
.ne 3
.TP
b
return the content of the structure member
.B mt_bf
which contains the optimum blocking factor.
.LP
This command is not terminated with a new-line.
.RE
.br
.ne 7
.TP
.BI I operation \en count \en
Perform a
.SB MTIOCOP
.BR ioctl (2)
command using the specified parameters.
The parameters are interpreted as the
.SM ASCII
representations of the decimal values to place in the
.I mt_op
and
.I mt_count
fields of the structure used in the
.B ioctl
call.  
When the operation is successful the return value is the
.I count
parameter.
Only Opcodes 0..7 are unique across different architectures.
But as in many cases 
.B Linux
does not even follow this rule.
If we know that we have been called by a VERSION 1 client,
we may safely assume that the client is not using
.B Linux
mapping over the wire but the standard mapping described below:
.RS
.TP
-1
Retrieve the version number of the
.B rmt
server and tell the server that the client is aware of the official
order of the 
.SB MTIOCOP
.BR ioctl (2)
opcodes in the range 0..7.
Local
.I mt_op
codes must be remapped to the official values before sendig them
over the wire.
.sp
The answer of the current version of
.B rmt
is 1.
Other
.B rmt
implementations send an error code back when this
command is used.
.TP
0
Issue a MTWEOF command (write 
.I count
end-of-file records).
.TP
1
Issue a MTFSF command (forward space over
.I count
file marks).
.TP
2
Issue a MTBSF command (backward space over
.I count
file marks).
.TP
3
Issue a MTFSR command (forward space
.I count
inter-record gaps).
.TP
4
Issue a MTBSR command (backward space 
.I count
inter-record gaps).
.TP
5
Issue a MTREW command (rewind).
.TP
6
Issue a MTOFFL command (rewind and put the drive offline).
.TP
7
Issue a MTNOP command (no operation, set status only).
.RE
.br
.ne 7
.TP
.BI i operation \en count \en
Perform a
.SB MTIOCOP
.BR ioctl (2)
command using the specified parameters.
This command implements support for commands bejond MTWEOF..MTNOP (0..7).
The parameters are interpreted as the
.SM ASCII
representations of the decimal values described below.
They are converted into the local values
.I mt_op
and
.I mt_count
fields of the structure used in the
.B ioctl
call according to the actual values found in <sys/mtio.h>.
When the operation is successful the return value is the
.I count
parameter.
.RS
.TP
0
Issue a MTCACHE command (switch cache on).
.TP
1
Issue a MTNOCACHE command (switch cache off).
.TP
2
Issue a MTRETEN command (retension the tape).
.TP
3
Issue a MTERASE command (erase the entire tape).
.TP
4
Issue a MTEOM command (position to end of media).
.TP
5
Issue a MTNBSF command (backward space
.I count
files to BOF).
.RE
.br
.ne 7
.TP
.BI v \en
Return the version of the 
.B rmt
server. This is currently the decimal number 1.
.RE
.LP
Any other command causes
.B rmt
to exit.
.SH FILES
.TP
/etc/default/rmt
Default values can be set for the following options in /etc/default/rmt.
For example:
.SM USER=tape
.RS
.TP
DEBUG
If you like to get debug information, set this to a file name where 
.B rmt
puts debug information.
.TP
USER
The name of a user (local to the magnetic tape server) that may use
the services of the
.B rmt
server.
A line
.BR USER= *
grants access to all users.
.TP
ACCESS
The name of a user (local to the magnetic tape server) that may use
the services of the
.B rmt
server followed by the name of a host from where operation is granted 
and a file specifier for a file or file sub tree that may be accessed.
.RE
.SH "SEE ALSO"
.BR star (1),
.BR rcmd (3),
.BR rexec (3),
.BR mtio (7),

.SH DIAGNOSTICS
All responses are send to the network connection.
They use the form described above.
.SH NOTES
.LP
To use 
.B rmt
as a remote file access protocol you need to use the symbolic open
modes as e.g. the
.I O_CREAT
flag is not unique between different architectures.
.LP
This implementation of
.B rmt
adds some security features to the server that make it behave
slightly different from older implementations.
Read the documentation about the file 
/etc/default/rmt
to make sure your local installation is configured for your needs.
.LP
To grant the same permissions as with the old
.B rmt
servers, create a file /etc/default/rmt and add the following lines
to this file:
.LP
.BR USER= *
.br
.BR ACCESS= "* * *"
.LP
Note that the three fields in the
.B ACCESS=
line need to be separated by a TAB character.
.SH BUGS
.LP
None known.
.SH HISTORY
.LP
The 
.B rmt
command first appeared on BSD in march 1981. This 
.B rmt
server is a new implementation
that tries to be compatible to all existing implementations.
It is the only known implementation that in addition tries to
fix the data exchange problems between differen architectures.

.SH AUTHOR
.nf
J\*org Schilling
Seestr. 110
D-13353 Berlin
Germany
.fi
.PP
Mail bugs and suggestions to:
.PP
.B
schilling@fokus.gmd.de
or
.B
js@cs.tu-berlin.de
or
.B
joerg@schily.isdn.cs.tu-berlin.de
